package com.test;
//接口不是类，编写接口的方式和类比较相似
//接口中全是抽象方法，接口是抽象方法的集合
//类通过实现接口而继承接口中的抽象方法
//除非实现 接口的是抽象类，否则接口的实现类必须实现接口的所有抽象方法
//
abstract interface Animal {
//	接口与类的区别：
		// 1 接口没有构造方法
		// 2 接口不能包含成员(实例)变量，除static、final外
		// 3接口不是被继承了，而是被实现了
		// 4接口支持多继承
		// 5接口不能被实例化
//	接口的特性：
		// 1接口的方法都被指定为： public abstract ,其他访问方式都会报错
		// 2接口中要么没有变量，有的话只能为：public static final 变量，其他都会报错
		// 3类只能继承一个类，但能实现多个接口
		// 4接口与接口之间是可以相互继承的
	//抽象类和接口的区别：
		// 1抽象类的方法可以有方法体，就是其中的非抽象方法可以实现方法的具体功能，接口不行
		// 2抽象类中的成员变量（实例变量）是各种类型的，接口中唯一指定为：public static final 型
		// 3接口中的方法没有静态一说，只是成员变量有静态的，抽象类中可以有静态代码块和静态方法
		// 4一个类只能继承 一个抽象类，但却可以实现多个接口
	public abstract void eat();
	public abstract void drink();
}
